import java.util.ArrayList;
import java.lang.Math;
import java.util.Iterator;

public class HelloWorld{
    private int v;
    private ArrayList<ArrayList<Integer>> adj = new ArrayList<ArrayList<Integer>>();
    boolean [] visited;
    int count =0;
    int result = 0;
    
     public static void main(String []args){
        HelloWorld obj = new HelloWorld();
        int[][] prerequisites = new int[][]{{1,2},{1,3},{2,4},{3,5},{7,8}};
        System.out.println(obj.findOrder(11, prerequisites));
     }
     
     public int findOrder(int num, int[][] prerequisites) {
        visited = new boolean[num];
        for(int i=0; i<num; i++)
        {
            visited[i] = false;
            adj.add(new ArrayList<Integer>());
        }
        
        for(int j=0; j<prerequisites.length; j++)
        {
            System.out.println("{"+prerequisites[j][0]+" , "+prerequisites[j][1]+"}");
            adj.get(prerequisites[j][0]).add(prerequisites[j][1]);
        }
        
        for(int j=0; j<adj.size(); j++)
        {
            System.out.print(j+" --> ");
            Iterator<Integer> iter = adj.get(j).iterator();
            while(iter.hasNext())
            {
                System.out.print(iter.next()+" , ");
            }
            System.out.println();
        }
        
        
        for(int k=1; k<num; k++)
        {
            if(visited[k] == false)
            {
                TopologicalSort(k);
                
                double temp = Math.sqrt(count);
                int temp2 = (int)Math.ceil(temp);
                result += temp2;
                System.out.println("Iteration"+k+" : "+temp2);
                count = 0;
            }
        }
        
        
        return result;
    }
    
    public void TopologicalSort(int e)
    {
        visited[e] = true;
        
        Integer i;
        Iterator<Integer> iter = adj.get(e).iterator();
        while (iter.hasNext()) { 
            i = iter.next();
            if(visited[i] == false)
                TopologicalSort(i);
        } 
        
        count++;
    }
}
